/***********************************************************************
MODULE:    Watchdog
VERSION:   1.01
CONTAINS:  Routines for controlling the Watchdog on the
           P89LPC922
COPYRIGHT: Embedded Systems Academy, Inc. - www.esacademy.com
LICENSE:   May be freely used in commercial and non-commercial code
           without royalties provided this copyright notice remains
           in this file and unaltered
WARNING:   IF THIS FILE IS REGENERATED BY CODE ARCHITECT ANY CHANGES
           MADE WILL BE LOST. WHERE POSSIBLE USE ONLY CODE ARCHITECT
           TO CHANGE THE CONTENTS OF THIS FILE
GENERATED: On "Aug 17 2007" at "12:37:14" by Code Architect 2.11
***********************************************************************/

// SFR description needs to be included
#include <reg922.h>
#include "watchdog.h"

/***********************************************************************
DESC:    Initializes the watchdog as a Watchdog Timer
         Uses Watchdog clock at 400kHz as a clock source
         Resets the device if not fed within 1.997 s
RETURNS: Nothing
************************************************************************/
void watchdog_init ( void )
{
  bit eacopy;

  // init reload value and prescaler
  // select Watchdog clock at 400kHz
  // start watchdog
  WDL = 0xC2;
  eacopy = EA;
  EA = 0;
  WDCON = 0xE5;
  WFEED1 = 0xA5;
  WFEED2 = 0x5A;
  EA = eacopy;

}

/***********************************************************************
DESC:    Feeds the Watchdog to stop the device from resetting
RETURNS: Nothing
CAUTION: watchdog_init must be called first
************************************************************************/
void watchdog_feed ( void )
{
  bit eacopy;

  // disable interrupts
  eacopy = EA;
  EA = 0;
  // feed the watchdog
  WFEED1 = 0xA5;
  WFEED2 = 0x5A;
  // restore interrupts
  EA = eacopy;
}

