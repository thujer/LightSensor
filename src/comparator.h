/***********************************************************************
MODULE:    Comparators
VERSION:   1.02
CONTAINS:  Routines for controlling the comparators on the Philips
           P89LPC922
COPYRIGHT: Embedded Systems Academy, Inc. - www.esacademy.com
LICENSE:   May be freely used in commercial and non-commercial code
           without royalties provided this copyright notice remains
           in this file and unaltered
WARNING:   IF THIS FILE IS REGENERATED BY CODE ARCHITECT ANY CHANGES
           MADE WILL BE LOST. WHERE POSSIBLE USE ONLY CODE ARCHITECT
           TO CHANGE THE CONTENTS OF THIS FILE
GENERATED: On "Nov 13 2007" at "00:10:12" by Code Architect 2.11
***********************************************************************/

#ifndef _COMPARATORSH_
#define _COMPARATORSH_

// values passed to the comparator functions
#define COMP_1             0      // comparator 1
#define COMP_2             1      // comparator 2
#define COMP_INPUTA        0x00   // comparator input CINnA
#define COMP_INPUTB        0x10   // comparator input CINnB
#define COMP_INPUTREF      0x00   // reference voltage input CMPREF
#define COMP_INTERNALREF   0x08   // internal reference voltage Vref
#define COMP_OUTPUTDISABLE 0x00   // disable comparator output pin
#define COMP_OUTPUTENABLE  0x04   // enable comparator output pin

/***********************************************************************
DESC:    Initializes a comparator
         Selects the comparator inputs/reference voltage source, enables
         comparator output, enables comparator, configures I/O pins
         needed, enables interrupts
         If a comparator is being enabled then comparators_13usdelay
         is called to provide a 13us delay to stabilize the comparator
RETURNS: Nothing
CAUTION: Set EA to 1 to enable interrupts after calling
************************************************************************/
extern void comparators_init
  (
  bit compnum,                    // comparator number:     COMP_1 or COMP_2
  unsigned char posinput,         // positive input A or B: COMP_INPUTA or COMP_INPUTB
  unsigned char neginput,         // negative input CMPREF or internal reference:
                                  //                        COMP_INPUTREF, COMP_INTERNALREF
  unsigned char outputenable      // enable or disable output pin:
                                  //                        COMP_OUTPUTDISABLE or COMP_OUTPUTENABLE
);

/***********************************************************************
DESC:    Disables a comparator
RETURNS: Nothing
CAUTION: The port pins used by the comparator are not reconfigured to
         be digital inputs or outputs.
************************************************************************/
/*
extern void comparators_disable
  (
  bit compnum                     // comparator number:     COMP_1 or COMP_2
  );
*/

/***********************************************************************
DESC:    Gets the current output of a comparator
RETURNS: Current comparator output
CAUTION: comparators_init must be called first
************************************************************************/
extern bit comparators_getoutput
  (
  bit compnum                     // comparator number:     COMP_1 or COMP_2
  );


extern void comparator_proc();

/***********************************************************************
DESC:    Selects a positive input source for a comparator
RETURNS: Nothing
CAUTION: comparators_init must be called first.
         The comparator interrupt is disabled while the input is
         changed. This means that the other comparator not being changed
         will also not generate an interrupt.
************************************************************************/
/*
extern void comparators_selectposinput
  (
  bit compnum,                    // comparator number:     COMP_1 or COMP_2
  unsigned char posinput          // positive input A or B: COMP_INPUTA or COMP_INPUTB
  );
*/

#endif // _COMPARATORSH_


