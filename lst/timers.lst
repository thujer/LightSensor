C51 COMPILER V8.05a   TIMERS                                                               11/16/2007 01:49:01 PAGE 1   


C51 COMPILER V8.05a, COMPILATION OF MODULE TIMERS
OBJECT MODULE PLACED IN .\obj\timers.obj
COMPILER INVOKED BY: H:\PrgJaz\Keil\C51\BIN\C51.EXE src\timers.c51 OMF2 BROWSE MODP2 INCDIR(.\src) DEBUG PRINT(.\lst\tim
                    -ers.lst) OBJECT(.\obj\timers.obj)

line level    source

   1          
   2          /***********************************************************************
   3          MODULE:    Timers
   4          VERSION:   1.00
   5          CONTAINS:  Routines for controlling the timers on the Philips
   6                     P89LPC922
   7          COPYRIGHT: Embedded Systems Academy, Inc. - www.esacademy.com
   8          LICENSE:   May be freely used in commercial and non-commercial code
   9                     without royalties provided this copyright notice remains
  10                     in this file and unaltered
  11          WARNING:   IF THIS FILE IS REGENERATED BY CODE ARCHITECT ANY CHANGES
  12                     MADE WILL BE LOST. WHERE POSSIBLE USE ONLY CODE ARCHITECT
  13                     TO CHANGE THE CONTENTS OF THIS FILE
  14          GENERATED: On "Nov 09 2007" at "18:15:33" by Code Architect 2.11
  15          ***********************************************************************/
  16          
  17          // SFR description needs to be included
  18          #include <reg922.h>
  19          #include "timers.h"
  20          
  21          int idata timer[TIMERS_COUNT];
  22          
  23          /***********************************************************************
  24          DESC:    Initializes timers
  25                   Timer 0 generates an interrupt every 10ms
  26                   Timer 1 is not used
  27          RETURNS: Nothing
  28          CAUTION: If interrupts are being used then EA must be set to 1
  29                   after calling this function
  30          ************************************************************************/
  31          void timers_init(void)
  32          {
  33   1        // configure timer 0
  34   1        TMOD &= 0xF0;
  35   1        TMOD |= 0x01;
  36   1        TAMOD &= 0xFE;
  37   1      
  38   1        // timer values for 10ms
  39   1        //TH0 = 0x70;
  40   1        //TL0 = 0x00;
  41   1      
  42   1        // timer values for 1ms
  43   1        TH0 = 0x71;
  44   1        TL0 = 0x99;
  45   1      
  46   1        // set timer 0 isr priority to 3
  47   1        IP0  &= 0xFD;
  48   1        IP0H &= 0xFD;
  49   1        IP0  |= 0x02;
  50   1        IP0H |= 0x02;
  51   1      
  52   1        // enable timer 0 interrupt
  53   1        ET0 = 1;
  54   1      
C51 COMPILER V8.05a   TIMERS                                                               11/16/2007 01:49:01 PAGE 2   

  55   1        // start timer 0
  56   1        TR0 = 1;
  57   1      
  58   1      } // timers_init
  59          
  60          
  61          /***********************************************************************
  62          DESC:    Timer 0 Interrupt Service Routine
  63          RETURNS: Nothing
  64          CAUTION: timers_init must be called first
  65                   EA must be set to 1
  66          ************************************************************************/
  67          void timers_isr0(void) interrupt 1 using 3
  68          {
  69   1          char timer_id;
  70   1      
  71   1          // reinitialize (for 1ms)
  72   1          TH0 = 0x71;
  73   1          TL0 = 0x99;
  74   1      
  75   1          // timers decrement
  76   1          for(timer_id=0; timer_id<TIMERS_COUNT; timer_id++)
  77   1          {
  78   2              if(timer[timer_id])
  79   2                  timer[timer_id]--;
  80   2          }
  81   1      } // timers_isr0
  82          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     83    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =      4    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
